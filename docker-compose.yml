version: '3'

networks:
    laravel:

services: 
    nginx:
        image: nginx:stable-alpine
        container_name: nginx
        ports: 
            - 8080:80
        volumes:
            - ./:/var/www/html
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on: 
            - php
            - mysql
        networks:
            - laravel
    # mysql:
    #     image: mysql:5.7.22
    #     container_name: mysql
    #     restart: unless-stopped
    #     tty: true
    #     ports: 
    #         - 3306:3306
    #     environment: 
    #         MYSQL_DATABASE: ${DB_DATABASE}
    #         MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    #         MYSQL_PASSWORD: ${DB_PASSWORD}
    #         MYSQL_USER: ${DB_USERNAME}
    #         SERVICE_TAGS: dev
    #         SERVICE_NAME: mysql
    #     volumes:
    #         - ./mysql/data:/var/lib/mysql
    #     networks: 
    #         - laravel
    mysql:
        image: mysql:5.7.29
        container_name: mysql
        restart: unless-stopped
        tty: true
        ports:
            - 3306:3306
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - ./mysql/data:/var/lib/mysql
            - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
        networks:
            - laravel
    php:
        build: 
            context: .
            dockerfile: Dockerfile
        container_name: php
        volumes: 
            - ./:/var/www/html
            - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
        ports: 
            - 9000:9000
        networks: 
            - laravel
    composer:
        image: composer:latest
        container_name: composer
        volumes:
            - ./:/var/www/html
        working_dir: /var/www/html
        networks:
            - laravel